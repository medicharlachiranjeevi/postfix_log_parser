input {
    beats {
        port => "5044"
	}
}

filter{
	grok{
		match=>["message",".*"]
	     }
	  mutate {
		 add_field=>{"ms"=>"%{message}"}
     add_field=>{"ip"=>"localhost"}
    split => { "message" => " " }
    }
  mutate {
		 add_field=>{"month"=>"%{message[0]}"}
     add_field=>{"day"=>"%{message[1]}"}
     add_field=>{"id"=>"%{message[5]}"}
     add_field=>{"time"=>"%{message[2]}"}
     }
     if "postfix/smtp[" in [ms] and "to=" in [ms] and "status=" in [ms] { 
    ruby{
                 code=>'event.set("email", event.get("message[6]").split("=")[1].split("<")[1].split(">")[0])'
                }
    ruby {
      code=>'event.set("status", event.get("message[11]").split("=")[1])'
    }
    ruby{
      code=>'event.set("message_status",event.get("message").join(" ").split("(")[1].split(")")[0])'
    }
}
else if "postfix/qmgr[" in [ms] and "from=" in [ms]
   {
    ruby{
                 code=>'event.set("email", event.get("message[6]").split("=")[1].split("<")[1].split(">")[0])'
                }
     mutate{
       add_field=>{"status"=>"recived"}
       add_field=>{"message_status"=>"recived"}
     }
   }  
  
  else {
    drop{}
    }
	ruby{
    code=>'event.set("monthno",{"Jan"=>"1","Feb"=>"2","Mar"=>"3","Apr"=>"4","May"=>"5","Jun"=>"6","Jul"=>"7","Aug"=>"8","Sep"=>"9","Oct"=>"10","Nov"=>"11","Dec"=>"12"} )'
  }
  ruby{
                 code=>'event.set("date", event.get("monthno")[event.get("month")]+"-"+event.get("day")+"-"+event.get("@timestamp").to_s.split("-")[0])'
                }
   if [status]=="deferred"{
   
    ruby{
       code=>'event.set("status","differed")'
     }
   }  
  if [status]=="bounced"{
     ruby{
       code=>'event.set("status","failed")'
     }

   }
    
}

output {
    stdout {
             codec  => rubydebug

           }
       if [status]=='failed'
      {      jdbc {
           driver_jar_path=>'./postgresql-42.2.4.jar'
		connection_string => 'jdbc:postgresql://142.93.28.15:5432/postgres'
		username => 'postgres'
		password => 'y&B!Lx&2dUZ7'
    statement => [ "INSERT INTO failed ( date,time,id,email,message_status,ip) VALUES(CAST (? AS date),CAST (? AS time),?,?,?,?)",'%{date}','%{time}','%{id}' ,'%{email}','%{message_status}','%{ip}']
	   }}
     if [status]=='sent'
     {      jdbc {
          driver_jar_path=>'./postgresql-42.2.4.jar'
   connection_string => 'jdbc:postgresql://142.93.28.15:5432/postgres'
   username => 'postgres'
   password => 'y&B!Lx&2dUZ7'
   statement => [ "INSERT INTO sent ( date,time,id,email,message_status,ip) VALUES(CAST (? AS date),CAST (? AS time),?,?,?,?)",'%{date}','%{time}','%{id}' ,'%{email}','%{message_status}','%{ip}']
    }}
    if [status]=='differed'
    {      jdbc {
         driver_jar_path=>'./postgresql-42.2.4.jar'
  connection_string => 'jdbc:postgresql://142.93.28.15:5432/postgres'
  username => 'postgres'
  password => 'y&B!Lx&2dUZ7'
  statement => [ "INSERT INTO differed ( date,time,id,email,message_status,ip) VALUES(CAST (? AS date),CAST (? AS time),?,?,?,?)",'%{date}','%{time}','%{id}' ,'%{email}','%{message_status}','%{ip}']
   }}
   if [status]=='recived'
   {      jdbc {
        driver_jar_path=>'./postgresql-42.2.4.jar'
 connection_string => 'jdbc:postgresql://142.93.28.15:5432/postgres'
 username => 'postgres'
 password => 'y&B!Lx&2dUZ7'
 statement => [ "INSERT INTO recived ( date,time,id,email,message_status,ip) VALUES(CAST (? AS date),CAST (? AS time),?,?,?,?)",'%{date}','%{time}','%{id}' ,'%{email}','%{message_status}','%{ip}']
  }}

	file {
                 codec => line { format => "%{date} %{time} %{status} %{id} %{email}"}
               path => "./my.log"
             }
	}

